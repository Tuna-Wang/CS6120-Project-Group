{"ast":null,"code":"var _jsxFileName = \"/Users/wenwenliu/Desktop/2025Spring/CS6120/CS6120-Project-Group/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockData = {\n  \"Are all people equal?\": {\n    chatGptStyle: \"Equality is a fundamental concept in many societies...\",\n    humphreyStyle: \"Ah, well, one must be cautious with such a simplistic question, Minister...\"\n  },\n  \"How can we achieve educational fairness?\": {\n    chatGptStyle: \"Educational fairness can be achieved through policies that ensure equal access...\",\n    humphreyStyle: \"Ah, yes, educational fairness—such an admirable goal, Minister, but one fraught with complexities...\"\n  },\n  \"Do humans need to work?\": {\n    chatGptStyle: \"Work is an essential part of human life, providing not only the means for survival...\",\n    humphreyStyle: \"Ah, the question of whether humans need to work—how delightfully modern! Minister...\"\n  }\n};\n\n/** Utility to normalize user input for data lookup. */\nfunction normalizeQuestion(str) {\n  if (!str) return \"\";\n  let lower = str.toLowerCase().trim();\n  return lower.replace(/[?.!,]+$/g, \"\").trim();\n}\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const textareaRef = useRef(null);\n\n  // Auto-resize the textarea every time \"question\" changes.\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = \"auto\";\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [question]);\n  const handleQuestionChange = event => {\n    setQuestion(event.target.value);\n  };\n  const handlePdfUpload = async event => {\n    /* ...your existing upload code... */\n  };\n  const getResponse = () => {\n    /* ...your existing mock lookup code... */\n  };\n  const setFinalAnswer = (index, style) => {\n    /* ...your existing code... */\n  };\n  const renderFinalAnswer = entry => {\n    /* ...your existing code... */\n  };\n  const clearChatHistory = () => {\n    setConversation([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: \"\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: conversation.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-bubble\",\n            children: entry.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), !entry.selectedStyle && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answers-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-bubble chatGpt-bubble\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon\",\n                children: \"\\uD83E\\uDD16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: entry.chatGptStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => alert(\"Mock citations!\"),\n                children: \"See Citations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), entry.humphreyStyle && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-bubble humphrey-bubble\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon\",\n                children: \"\\uD83D\\uDC54\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: entry.humphreyStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"choose-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setFinalAnswer(index, 'chatGpt'),\n                children: \"Like ChatGPT Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), entry.humphreyStyle && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setFinalAnswer(index, 'humphrey'),\n                children: \"Like Humphrey Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), entry.selectedStyle && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-answer\",\n            children: renderFinalAnswer(entry)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-wrapper\",\n        children: \"\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6YeszVLToHanL4fuRR+Jfg3Gg3U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","mockData","chatGptStyle","humphreyStyle","normalizeQuestion","str","lower","toLowerCase","trim","replace","App","_s","question","setQuestion","conversation","setConversation","textareaRef","current","style","height","scrollHeight","handleQuestionChange","event","target","value","handlePdfUpload","getResponse","setFinalAnswer","index","renderFinalAnswer","entry","clearChatHistory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","selectedStyle","onClick","alert","_c","$RefreshReg$"],"sources":["/Users/wenwenliu/Desktop/2025Spring/CS6120/CS6120-Project-Group/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst mockData = {\n  \"Are all people equal?\": {\n    chatGptStyle: \"Equality is a fundamental concept in many societies...\",\n    humphreyStyle: \"Ah, well, one must be cautious with such a simplistic question, Minister...\"\n  },\n  \"How can we achieve educational fairness?\": {\n    chatGptStyle: \"Educational fairness can be achieved through policies that ensure equal access...\",\n    humphreyStyle: \"Ah, yes, educational fairness—such an admirable goal, Minister, but one fraught with complexities...\"\n  },\n  \"Do humans need to work?\": {\n    chatGptStyle: \"Work is an essential part of human life, providing not only the means for survival...\",\n    humphreyStyle: \"Ah, the question of whether humans need to work—how delightfully modern! Minister...\"\n  }\n};\n\n/** Utility to normalize user input for data lookup. */\nfunction normalizeQuestion(str) {\n  if (!str) return \"\";\n  let lower = str.toLowerCase().trim();\n  return lower.replace(/[?.!,]+$/g, \"\").trim();\n}\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const textareaRef = useRef(null);\n\n  // Auto-resize the textarea every time \"question\" changes.\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = \"auto\";\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [question]);\n\n  const handleQuestionChange = (event) => {\n    setQuestion(event.target.value);\n  };\n\n  const handlePdfUpload = async (event) => {\n    /* ...your existing upload code... */\n  };\n\n  const getResponse = () => {\n    /* ...your existing mock lookup code... */\n  };\n\n  const setFinalAnswer = (index, style) => {\n    /* ...your existing code... */\n  };\n\n  const renderFinalAnswer = (entry) => {\n    /* ...your existing code... */\n  };\n\n  const clearChatHistory = () => {\n    setConversation([]);\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* Left Sidebar (unchanged) */}\n      <div className=\"sidebar\">…</div>\n\n      {/* Right Chat Panel */}\n      <div className=\"chat-panel\">\n        <div className=\"chat-messages\">\n          {conversation.map((entry, index) => (\n            <div key={index} className=\"chat-block\">\n              {/* Question Bubble */}\n              <div className=\"question-bubble\">\n                {entry.question}\n              </div>\n\n              {/* Answer Options */}\n              {!entry.selectedStyle && (\n                <div className=\"answers-group\">\n                  {/* — CHATGPT BUBBLE: we inject “See Citations” here */}\n                  <div className=\"answer-bubble chatGpt-bubble\">\n                    <span className=\"icon\">🤖</span>\n                    <div>{entry.chatGptStyle}</div>\n\n                    {/* ←—— ADDED this button for your local mock preview */}\n                    <button onClick={() => alert(\"Mock citations!\")}>\n                      See Citations\n                    </button>\n                  </div>\n\n                  {/* — HUMPHREY BUBBLE */}\n                  {entry.humphreyStyle && (\n                    <div className=\"answer-bubble humphrey-bubble\">\n                      <span className=\"icon\">👔</span>\n                      <div>{entry.humphreyStyle}</div>\n                    </div>\n                  )}\n\n                  {/* Like-buttons */}\n                  <div className=\"choose-buttons\">\n                    <button onClick={() => setFinalAnswer(index, 'chatGpt')}>\n                      Like ChatGPT Answer\n                    </button>\n                    {entry.humphreyStyle && (\n                      <button onClick={() => setFinalAnswer(index, 'humphrey')}>\n                        Like Humphrey Answer\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Final Answer (if chosen) */}\n              {entry.selectedStyle && (\n                <div className=\"final-answer\">\n                  {/* ...unchanged... */}\n                  {renderFinalAnswer(entry)}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Chat Input Area (unchanged) */}\n        <div className=\"chat-input-wrapper\">…</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}